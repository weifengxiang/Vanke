<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sky.base.client.BaseChannelImgMapper">
  <resultMap id="BaseResultMap" type="org.sky.base.model.BaseChannelImg">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="IDCARD" jdbcType="VARCHAR" property="idcard" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="CREATER" jdbcType="VARCHAR" property="creater" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATER" jdbcType="VARCHAR" property="updater" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="QQ" jdbcType="VARCHAR" property="qq" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.sky.base.model.BaseChannelImgWithBLOBs">
    <result column="STUD_PIC1" jdbcType="LONGVARCHAR" property="studPic1" />
    <result column="STUD_PIC2" jdbcType="LONGVARCHAR" property="studPic2" />
    <result column="IDCARD_PIC1" jdbcType="LONGVARCHAR" property="idcardPic1" />
    <result column="IDCARD_PIC2" jdbcType="LONGVARCHAR" property="idcardPic2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, IDCARD, REMARK, CREATER, CREATE_TIME, UPDATER, UPDATE_TIME, QQ
  </sql>
  <sql id="Blob_Column_List">
    STUD_PIC1, STUD_PIC2, IDCARD_PIC1, IDCARD_PIC2
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.sky.base.model.BaseChannelImgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_channel_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.sky.base.model.BaseChannelImgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_channel_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySqlPaginationSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_channel_img
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from base_channel_img
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.sky.base.model.BaseChannelImgExample">
    delete from base_channel_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.sky.base.model.BaseChannelImgWithBLOBs">
    insert into base_channel_img (ID, IDCARD, REMARK, 
      CREATER, CREATE_TIME, UPDATER, 
      UPDATE_TIME, QQ, STUD_PIC1, 
      STUD_PIC2, IDCARD_PIC1, IDCARD_PIC2
      )
    values (#{id,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{qq,jdbcType=VARCHAR}, #{studPic1,jdbcType=LONGVARCHAR}, 
      #{studPic2,jdbcType=LONGVARCHAR}, #{idcardPic1,jdbcType=LONGVARCHAR}, #{idcardPic2,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.sky.base.model.BaseChannelImgWithBLOBs">
    insert into base_channel_img
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="idcard != null">
        IDCARD,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="creater != null">
        CREATER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updater != null">
        UPDATER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="qq != null">
        QQ,
      </if>
      <if test="studPic1 != null">
        STUD_PIC1,
      </if>
      <if test="studPic2 != null">
        STUD_PIC2,
      </if>
      <if test="idcardPic1 != null">
        IDCARD_PIC1,
      </if>
      <if test="idcardPic2 != null">
        IDCARD_PIC2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="studPic1 != null">
        #{studPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="studPic2 != null">
        #{studPic2,jdbcType=LONGVARCHAR},
      </if>
      <if test="idcardPic1 != null">
        #{idcardPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="idcardPic2 != null">
        #{idcardPic2,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.sky.base.model.BaseChannelImgExample" resultType="java.lang.Long">
    select count(*) from base_channel_img
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_channel_img
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        IDCARD = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        CREATER = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        UPDATER = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qq != null">
        QQ = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.studPic1 != null">
        STUD_PIC1 = #{record.studPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.studPic2 != null">
        STUD_PIC2 = #{record.studPic2,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.idcardPic1 != null">
        IDCARD_PIC1 = #{record.idcardPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.idcardPic2 != null">
        IDCARD_PIC2 = #{record.idcardPic2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update base_channel_img
    set ID = #{record.id,jdbcType=VARCHAR},
      IDCARD = #{record.idcard,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATER = #{record.creater,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATER = #{record.updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      QQ = #{record.qq,jdbcType=VARCHAR},
      STUD_PIC1 = #{record.studPic1,jdbcType=LONGVARCHAR},
      STUD_PIC2 = #{record.studPic2,jdbcType=LONGVARCHAR},
      IDCARD_PIC1 = #{record.idcardPic1,jdbcType=LONGVARCHAR},
      IDCARD_PIC2 = #{record.idcardPic2,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_channel_img
    set ID = #{record.id,jdbcType=VARCHAR},
      IDCARD = #{record.idcard,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATER = #{record.creater,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATER = #{record.updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      QQ = #{record.qq,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sky.base.model.BaseChannelImgWithBLOBs">
    update base_channel_img
    <set>
      <if test="idcard != null">
        IDCARD = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        UPDATER = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qq != null">
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="studPic1 != null">
        STUD_PIC1 = #{studPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="studPic2 != null">
        STUD_PIC2 = #{studPic2,jdbcType=LONGVARCHAR},
      </if>
      <if test="idcardPic1 != null">
        IDCARD_PIC1 = #{idcardPic1,jdbcType=LONGVARCHAR},
      </if>
      <if test="idcardPic2 != null">
        IDCARD_PIC2 = #{idcardPic2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.sky.base.model.BaseChannelImgWithBLOBs">
    update base_channel_img
    set IDCARD = #{idcard,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATER = #{updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      QQ = #{qq,jdbcType=VARCHAR},
      STUD_PIC1 = #{studPic1,jdbcType=LONGVARCHAR},
      STUD_PIC2 = #{studPic2,jdbcType=LONGVARCHAR},
      IDCARD_PIC1 = #{idcardPic1,jdbcType=LONGVARCHAR},
      IDCARD_PIC2 = #{idcardPic2,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sky.base.model.BaseChannelImg">
    update base_channel_img
    set IDCARD = #{idcard,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATER = #{updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      QQ = #{qq,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="MySqlPaginationSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin},#{page.rows} ]]>
    </if>
  </sql>
</mapper>